#summary One-sentence summary of this page.

= Introduction =

ActiveJDBC provides two classes for connection management: [http://code.google.com/p/activejdbc/source/browse/trunk/activejdbc/src/main/java/activejdbc/Base.java Base.java] and [http://code.google.com/p/activejdbc/source/browse/trunk/activejdbc/src/main/java/activejdbc/DB.java DB.java]. 


=Thread connection propagation=

ActiveJDBC models when operate, utilize a connection found on a current thread. This connection is put on the local thread by Base or DB class before any DB operation. approach allows for more concise API where there is no need for DB Session or persistent managers as in other Java ORMs. 

Here is a simple program:

{{{
1. public static void main(String[] args) {
2.    Base.open("com.mysql.jdbc.Driver", "jdbc:mysql://localhost/test", "the_user", "the_password");
3.    Employee.findAll().dump();
4.    Base.close();
5. }
}}}

On line 1, class Base will open a new connection and attach it to the current thread. This connection will also be marked with name "default".


=Database names=

ActiveJDBC has a concept of a "database". A database is the same as a "database" in normal understanding. However, an application can be connected to multiple databases at the same time. In this case. ActiveJDBC allows for assigning different logical names to different databases. For example, one might have an Oracle database with accounting data, and a MySQL database with inventory control data. In this case, you might want to have an "accounting" database and an "inventory" database as logical names assigned to these databases. 

=DB and Base=

Opening and closing connections is done with classes Base and DB. The DB class is used in cases where you have more than one database in the system, such as "accounting" and "inventory" in the example above. 

Example:

{{{
new DB("inventory").open("com.mysql.jdbc.Driver", "jdbc:mysql://localhost/test", "root", "p@ssw0rd");
}}}
In this code example, there is a database connection opened, and attached to a local thread under name "inventory". 

The c

=Models connected to multiple databases=




=Database connection pools=

=Database names=
= Details =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages