#summary ActiveJDBC: FAQ

<wiki:toc max_depth="2" />


= What the heck is instrumentation? =

See this page: [Instrumentation]

=How to integrate AJ projects into Netbeans?=

Look here: [NetbeansIntegration]

=Does it support database pools?=

YES, please see here: [http://code.google.com/p/activejdbc/wiki/DatabaseConnectionManagement#Database_connection_pools Database connection pools], and also see example of pool usage: [http://code.google.com/p/activejdbc/source/browse/trunk/activejdbc/src/test/java/activejdbc/C3P0PoolTest.java C3P0PoolTest]

=How to use Instrumentation plugin with Eclipse?=

Please, take a look at this thread:
https://groups.google.com/forum/?fromgroups=#!searchin/activejdbc-group/eclipse/activejdbc-group/xQ5gUSnCalc/ZuuPrHsriuAJ


=Does ActiveJDBC support SQL IN statement?=

This is one not supported by JDBC:
http://stackoverflow.com/questions/178479/preparedstatement-in-clause-alternatives

However, there are workaround alternatives, most of them centered around concatenating strings.
Basically you need to construct a full query as string:

<code>
String sql = "name IN ('John', 'Hellen', 'Henry')";
</code>

To make this, you can do:
<code>
String sql = String.format("name IN ('%s')", join(list("John", "Hellen", "Henry"), "', '");
long  count = Person.count(sql);
</code>

where `join()` method can be statically imported from:
http://ipsolutionsdev.com/activejdbc/org/javalite/common/Util.html#join%28java.util.Collection,%20java.lang.String%29

and `list()` method can be statically imported from:
http://ipsolutionsdev.com/activejdbc/org/javalite/common/Collections.html#list%28T...%29
both of these classes are already on your classpath.